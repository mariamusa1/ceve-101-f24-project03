---
title: "CEVE 101: Project 03"
author: "Maria Eduarda Dias Musa (md83)"
date: "2024-10-23"

# do not change anything below this line
engine: julia
code-annotations: hover
format:
    html: default
    docx: default
---

## Reading the Data 

```{julia}
using Revise                      # <1>
using RainwaterHarvesting         # <2>
```


### Setting the file path

Selected file with data package #2

```{julia}
filepath = "data/2.txt" # <1>   
rainfall_data = RainfallData(filepath) # <2>
```

### Plotting the Data

```{julia}
plot(rainfall_data) # <1>
```


### Analyzing Available Data

After analyzing the data in the second data package, we can conclude that there is available data for all years from 1974 to 2024.

The available data is sufficient to conduct meaningful risk assessments since we don't necessarily see any gaps or missing years over the span of 50 years.

### Investigating Historical Droughts  

There are a couple of periods in history in which CearÃ¡ has suffered greatly from major droughts. These include 1877-1879, 1915, 1931, 1973, 1983, 1993, 1998, and the last major drought period which was from 2012-2017. 

As our data begins in 1974, we do have the data from all the time as from that year to today. However, there are a couple of hitorical droughts that could be useful for our data but are not recent enough to be recorded in the chosen record. It does not cause any risks from the time period in which the graph analyses, but having some previous data could help with enhancing the general accuracy of this investigation. 

## Understanding the Theoretical Model

### Limiting Assumptions and Approximations in the Model

For the Mass Balance Equation, I figured that the model did not take into consideration any possible outside factors that could affect the volume of water in the tank. Some examples could be overflowing, problems with the tank's functionality, and leakage. Originally, the only source of removal of water is from the (consumption)$C_t$ variable. 

For the Consumption equation, I think the main limitation in the model is assuming that all households consume the same 74.1 liters per day during the dry season. Furthermore, having the 150 days as a fixed number of the rainy days per year is also a limitation since we have seen how there are varying rainy days in every different year. 


### Modifying the Model to Relax these Assumptions

For the Mass Balance Equation we subtract another variable from the equation to account for any problems, leakages, and functionality. This can help in the approximation of the total mass balance of the rainwater tank.

Let's call this variable "Losses"
$L_t$

$$
V_{t+1} = V_t + Q_t - C_t - L_t| 0 \leq V_t \leq V_\text{max}
$$


For the consumption equation, we could modify the fixed 74.1 when day of the year > 150. Taking into consideration average consumption per person to a specific household by resident size. This helps scale the needed changes for the rainwater tanks in Brazil as according to each household size. 

$$
C_t = \begin{cases}
    averageconsumptionpp*householdresidents & \quad \text{day of year} > 150 \\
    0 & \quad \text{day of year} \leq 150
\end{cases}
$$


## Model Implementation and Testing

### Defining the Model Parameters

Model parameters with sensible default values:

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.85,      # <2>
    roof_area_m2=45.0,            # <3>
    first_flush_mm=2.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

Default model for the year 1981.

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

Comparing rainfall and tank volume with the default parameters:

```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```


### Modification to Model Parameters #1

Increasing the runoff coefficient of the model.

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.95,      # <2>
    roof_area_m2=45.0,            # <3>
    first_flush_mm=2.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

Plot of the model for 1981 with runoff coefficients 

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

Comparing rainfall and tank volume with the modified runoff parameters:
```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

I chose to modify the Runoff parameter by increase it since it would improve the efficiency of water collection. Hence, improving rainwater collection for the water harvest collection for the household in the northeast Brazil. This would help minimize any water lost during droughts and also for the prevention of droughts in rain season. 

From the results, we see that the tank retains water for longer during the year, especially during periods of decreased daily rainfall. 


### Modification to Model Parameters #2

My second modification would be to increase roof area parameter. This increase wouldn't be very big since realistically it involves infrastructure that can be harder to implement in northeast Brazil.

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.95,      # <2>
    roof_area_m2=55.0,            # <3>
    first_flush_mm=2.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

Plot of the model for 1981 with increased roof area 

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

Comparing rainfall and tank volume with the modified roof area parameter:
```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

I chose to modify the roof area, as I thought increasing it would maximize rainwater collection during rain seasons to prepare households for droughts. 

Surprisingly, the effect of modifying these parameters did not have a larger effect than modifying the runoff coefficient. I suspect this is because the parameter was not increased dramatically. But, thinking realistically, it wouldn't make sense. So, maybe I cocnlude that collection efficiency has a larger effect than increasing the roof area. 

### Reliability Analysis

```{julia}
all_years = sort(collect(keys(rainfall_data.annual_data)))          # <1>
all_results = [run_timesteps(rainfall_data.annual_data[year], param) for year in all_years]   # <2>
any_failures = [!isempty(result.failure_dates) for result in all_results]  # <3>
println("Number of years with failures: ", sum(any_failures), " out of ", length(all_years))  # <4>
```

With my modified parameters, my model fails 1 out of 50 years. Meaning that the tank ran dry 1 out of 50 times (years). 

```{julia}
reliability_percentage = (49/50)*100

Reliability percentage of the model is 98%. This suggests that the model is effective and has a higher probability of decreasing the chances of having the tank running dry. Hence, we can conclude that there is very low chance of system or model failure. 