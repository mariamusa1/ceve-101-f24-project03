---
title: "CEVE 101: Project 03"
author: "Maria Eduarda Dias Musa (md83)"
date: "2024-10-23"

# do not change anything below this line
engine: julia
code-annotations: hover
format:
    html: default
    docx: default
---

## Reading the Data 

```{julia}
using Revise                      # <1>
using RainwaterHarvesting         # <2>
```


### Setting the file path

Selected file with data package #2

```{julia}
filepath = "data/2.txt" # <1>   
rainfall_data = RainfallData(filepath) # <2>
```

### Plotting the Data

```{julia}
plot(rainfall_data) # <1>
```


### Analyzing Available Data

After analyzing the data in the second data package, we can conclude that there is available data for all years from 1974 to 2024.

The available data is sufficient to conduct meaningful risk assessments since we don't necessarily see any gaps or missing years over the span of 50 years.

### Investigating Historical Droughts  

There are a couple of periods in history in which CearÃ¡ has suffered greatly from major droughts. These include 1877-1879, 1915, 1931, 1973, 1983, 1993, 1998, and the last major drought period which was from 2012-2017. 

As our data begins in 1974, we do have the data from all the time as from that year to today. However, there are a couple of hitorical droughts that could be useful for our data but are not recent enough to be recorded in the chosen record. It does not cause any risks from the time period in which the graph analyses, but having some previous data could help with enhancing the general accuracy of this investigation. 

## Understanding the Theoretical Model

### Limiting Assumptions and Approximations in the Model

For the Mass Balance Equation, I figured that the model did not take into consideration any possible outside factors that could affect the volume of water in the tank. Some examples could be overflowing, problems with the tank's functionality, and leakage. Originally, the only source of removal of water is from the (consumption)$C_t$ variable. 

For the Consumption equation, I think the main limitation in the model is assuming that all households consume the same 74.1 liters per day during the dry season. Furthermore, having the 150 days as a fixed number of the rainy days per year is also a limitation since we have seen how there are varying rainy days in every different year. 


### Modifying the Model to Relax these Assumptions

For the Mass Balance Equation we subtract another variable from the equation to account for any problems, leakages, and functionality. 

Let's call this variable "Losses"
$L_t$

$$
V_{t+1} = V_t + Q_t - C_t - L_t| 0 \leq V_t \leq V_\text{max}
$$


For the consumption equation, we could modify the fixed 74.1 when day of the year > 150. Taking into consideration consumption to a specific household by resident size. 

$$
C_t = \begin{cases}
    averageconsumption*household_residents & \quad \text{day of year} > 150 \\
    0 & \quad \text{day of year} \leq 150
\end{cases}
$$

This makes two major assumptiuons.
First, the household begins using water from the tank after the 150th day of the year.
This is based on the idea that the rainy season lasts for about the first 150 days of the year, and so they may have other sources of water before then.
The second assumption is that each household consumes 74.1 liters per day during the dry season.
How does this compare to your household's water usage?

## Model Implementation and Testing

### Defining the Model Parameters

We can define the model parameters with sensible default values.
You will have the opportunity to change these values later.

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.85,      # <2>
    roof_area_m2=45.0,            # <3>
    first_flush_mm=2.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

1. This creates a `ModelParameters` object with the specified parameters.
2. The runoff coefficient ($\eta$) is a measure of how much of the rain that falls on the roof ends up in the tank.
3. The roof area ($A$) is the area of the roof that the rain falls on.
4. The first flush volume ($V_f$) is the volume of rain that is discarded because it is dirty.
5. The tank capacity ($V_\text{max}$) is the maximum volume of the tank.

### Running the Simulation for One Year

Let's run the model for the year 1981.

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

1. We select the annual rainfall data for the year 1981.
2. We run the simulation for the year 1981.
3. We plot the results, again using a `plot` function defined in [viz.jl](./RainwaterHarvesting/src/viz.jl).

To compare rainfall and tank volume:

```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

Observe how the tank's water level responds to rainfall events.
Note any periods when the tank runs dry or overflows.

### Reliability Analysis

We can run simulations for all years, one at a time, and then check how many times the tank runs dry.
You can run simulations for all years at once with the following code:

```{julia}
all_years = sort(collect(keys(rainfall_data.annual_data)))          # <1>
all_results = [run_timesteps(rainfall_data.annual_data[year], param) for year in all_years]   # <2>
any_failures = [!isempty(result.failure_dates) for result in all_results]  # <3>
println("Number of years with failures: ", sum(any_failures), " out of ", length(all_years))  # <4>
```

1. We get all the years in order.
2. We run the simulation for each year.
3. We check if any failures occurred.
4. We print the number of years with failures and the total number of years.
